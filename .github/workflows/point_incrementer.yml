name: Collaborank Point Incrementer

on:
  pull_request:
    types: [closed]

jobs:
  pairing_point_calculator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/github-script@v3
        id: parse-co-authors
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        with:
          result-encoding: string
          script: |
            const commitsResponse = await github.request(context.payload.pull_request.commits_url)
            const parseEmail = (message) => { if (message.includes('>')) { return message.substring(0, (message.indexOf('>'))) } else { return null } }
            const getCommitEmails = (commitData) => { return commitData.commit.message.split('<').map(parseEmail) }
            const getEmails = (messages) => { return messages.reduce((acc, val) => acc.concat(val), []) }
            const removeBadEmails = (emails) => { return emails.reduce((acc, val) => val ? (acc || []).concat([val]) : acc) }
            const formatEmailParams = (email) => { return ("pointed_event[emails][]=" + email) }
            const coAuthorEmails = removeBadEmails(getEmails(commitsResponse.data.map(getCommitEmails)))
            const uniqueCoAuthorEmails = (coAuthorEmails || []).filter((value, index) => coAuthorEmails.indexOf(value) === index)
            return coAuthorEmails ? uniqueCoAuthorEmails.map(formatEmailParams).join('&') : ''
      - name: Award Points to Pairing Participants
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && steps.parse-co-authors.outputs.result != ''
        run: curl -d 'pointed_event[repo]=${{github.event.pull_request.base.repo.name}}&pointed_event[repo_owner]=${{github.repository_owner}}&pointed_event[base_branch]=${{github.base_ref}}&pointed_event[merge_branch]=${{github.head_ref}}&pointed_event[type]=PR_COAUTHORS&${{steps.parse-co-authors.outputs.result}}' https://collaborank.herokuapp.com/api/v1/pointed_events.json
  approval_point_calculator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/github-script@v3
        id: parse-approvers
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        with:
          result-encoding: string
          script: |
            const reviewsResponse = await github.request(context.payload.pull_request._links.self.href + '/reviews')
            const approvedReviews = reviewsResponse.data.filter(function(review) { return review.state == 'APPROVED' })
            const ascendingReviews = approvedReviews.sort((a, b) => Date.parse(a.submitted_at) - Date.parse(b.submitted_at))
            const ascendingReviewers = ascendingReviews.map(function(reviewResponse) { return reviewResponse.user.login })
            const uniqueAscendingReviewers = ascendingReviewers.filter((value, index) => ascendingReviewers.indexOf(value) === index)
            const formatHandleParams = (handle) => { return ("pointed_event[github_handles][]=" + handle) }
            return uniqueAscendingReviewers.length < 1 ? '' : uniqueAscendingReviewers.map(formatHandleParams).join('&')
      - name: Award Points to Pull Request Approvers
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && steps.parse-approvers.outputs.result != ''
        run: curl -d 'pointed_event[repo]=${{github.event.pull_request.base.repo.name}}&pointed_event[repo_owner]=${{github.repository_owner}}&pointed_event[base_branch]=${{github.base_ref}}&pointed_event[merge_branch]=${{github.head_ref}}&pointed_event[type]=PR_APPROVAL&${{steps.parse-approvers.outputs.result}}' https://collaborank.herokuapp.com/api/v1/pointed_events.json
